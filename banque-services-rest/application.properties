# App related
app.name=banque-services-rest

info.build.description=Banque Services REST API
info.build.version=${version}

endpoints.shutdown.enabled=true
management.context-path=/mgmt
spring.main.show-banner=false

# HTTPS
server.ssl.enabled=false
server.ssl.key-store-type=JKS
server.port=8082

# Logging
#logging.config=classpath:log4j.properties

###############################################################################
## Connection's pool config--
#
#The initial number of connections that are created when the pool is started. Default value is 10
spring.datasource.initialSize=1
#The minimum number of established connections that should be kept in the pool at all times. The connection pool can shrink below this number if validation queries fail. Default value is derived from initialSize:10 (also see testWhileIdle)
#minIdle shall be lesser or equal to maxActive
spring.datasource.minIdle=0
#The maximum number of active connections that can be allocated from this pool at the same time.  The default value is 100
spring.datasource.maxActive=10
#The maximum number of connections that should be kept in the pool at all times. Default value is maxActive:100 Idle connections are checked periodically (if enabled) and connections that been idle for longer than minEvictableIdleTimeMillis will be released. (also see testWhileIdle)
#maxIdle shall be greater or equal to minIdle
spring.datasource.maxIdle=2
#
#spring.datasource.testWhileIdle=true
#The number of milliseconds to sleep between runs of the idle connection validation/cleaner thread. This value should not be set under 1 second. It dictates how often we check for idle, abandoned connections, and how often we validate idle connections. The default value is 5000 (5 seconds).
#spring.datasource.timeBetweenEvictionRunsMillis=3540000
#The SQL query that will be used to validate connections from this pool before returning them to the caller. If specified, this query does not have to return any data, it just can't throw a SQLException. The default value is null. Example values are select 1 from dual(oracle)
#spring.datasource.validationQuery=select 1 from dual
#The timeout in seconds before a connection validation queries fail.
#spring.datasource.validationQueryTimeout=2
#
#The indication of whether objects will be validated before being borrowed from the pool. If the object fails to validate, it will be dropped from the pool, and we will attempt to borrow another. NOTE - for a true value to have any effect, the validationQuery or validatorClassName parameter must be set to a non-null string. In order to have a more efficient validation, see validationInterval. Default value is false
#This enable some sort of "watchdog" on Database connection. If connection is lost,  the pool will be cleaned ups and connection reestablished (no need to restart the microservice
#spring.datasource.testOnBorrow=true
#
## Connection's pool config end--
###############################################################################


dao.extractor=org.nocorp.%s.dao.mapper.%sResultSetExtractor
dao.bean.name=%sDaoImpl

spring.datasource.driver-class-name=com.mysql.jdbc.Driver

enable.jms=false
server.tomcat.max-threads=4

activemq.url=tcp://192.168.0.220:61616
queue.quote.in=QUOTE_IN

secret.key=secret

spring.http.converters.preferred-json-mapper=jackson
spring.jackson.date-format=com.fasterxml.jackson.databind.util.ISO8601DateFormat
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.property-naming-strategy=com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy

